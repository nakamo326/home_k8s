- name: Initialize the cluster and save the join command
  hosts: master
  become: true
  become_user: root
  tasks:
    - name: Check if kubeconfig exists
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: kubeconfig

    - name: Initialize the cluster
      ansible.builtin.command: "kubeadm init --apiserver-advertise-address={{ ansible_host }}"
      args:
        creates: /etc/kubernetes/admin.conf
      when: not kubeconfig.stat.exists

    - name: Setup kubectl config
      when: not kubeconfig.stat.exists
      block:
        - name: Create .kube directory
          ansible.builtin.command: "mkdir -p $HOME/.kube"
          become: true
          become_user: "{{ ansible_user }}"
          changed_when: false
        - name: Copy kubeconfig
          ansible.builtin.command: "{{ item }}"
          with_items:
            - "cp -f /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config"
            - "chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config"
          become: true
          become_user: "root"
          changed_when: true

    - name: Get join command
      ansible.builtin.command: kubeadm token create --print-join-command
      become: true
      become_user: "{{ ansible_user }}"
      register: join_command
      changed_when: true

    - name: Save join command to a file
      ansible.builtin.copy:
        content: "{{ join_command.stdout }}"
        dest: /join-command
        mode: "0644"
---
- name: Install helm and cilium cli
  hosts: master
  become: true
  vars:
    cli_arch: "amd64"
  tasks:
    - name: Install helm
      snap:
        name: helm
        classic: true

    - name: Get the architecture of the machine
      shell: uname -m
      register: machine_arch

    - name: Set variable cli_arch to arm64 if machine architecture is aarch64
      set_fact:
        cli_arch: "arm64"
      when: machine_arch.stdout == 'aarch64'

    - name: Get cilium cli version
      shell: curl -s https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt
      register: cilium_cli_version

    - name: Download cilium cli
      get_url:
        url: https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_version.stdout }}/cilium-linux-{{ cli_arch }}.tar.gz
        dest: /tmp/cilium-linux-{{ cli_arch }}.tar.gz
        checksum: sha256:/tmp/cilium-linux-{{ cli_arch }}.tar.gz.sha256sum

    - name: Extract cilium cli
      unarchive:
        src: /tmp/cilium-linux-{{ cli_arch }}.tar.gz
        dest: /usr/local/bin
        remote_src: true

    - name: Remove downloaded cilium cli files
      file:
        path: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz"
        state: absent
